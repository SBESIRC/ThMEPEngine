<cus:ThCustomWindow x:Class="TianHua.Mep.UI.UI.ExtractRoomOutlineUI"
             xmlns:cus="clr-namespace:ThControlLibraryWPF.CustomControl;assembly=ThControlLibraryWPF"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:TianHua.Mep.UI.UI"
                    Title="提取房间框线"
                    SizeToContent="WidthAndHeight"
                    Width="200"
                    Height="355"
                    ResizeMode="NoResize"
                    MaxHeight="355"
                    MaxWidth="200"
             mc:Ignorable="d" Closed="ThCustomWindow_Closed">
    <Window.Resources>
        <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
            <Border x:Name="Border" BorderBrush="Gray" BorderThickness="1.5" CornerRadius="5" Background="White" TextBlock.Foreground="Black">
                <!--设置控件的边框，圆角，背景色，字体颜色-->
                <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <!--显示控件的内容-->
                </ContentPresenter>
            </Border>
        </ControlTemplate>        
    </Window.Resources>
    <StackPanel Margin="3,5" Orientation="Vertical">
        <Line Grid.Row="4" Margin="0,0,0,5" X1="0" Y1="0" X2="201" Y2="0" Stroke="Gray" 
                      StrokeThickness="1" VerticalAlignment="Center"/>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Content="提取墙线" Width="60" Name="btnExtractWall" Template="{StaticResource ButtonTemplate}" Click="btnExtractWall_Click"></Button>
            <Button Content="生成房间框线" Width="90" Name="btnBuildRoomOutline" Margin="10,0,0,0" Template="{StaticResource ButtonTemplate}" Click="btnBuildRoomOutline_Click"></Button>
        </StackPanel>
        <Line Grid.Row="4" Margin="0,5,0,5" X1="0" Y1="0" X2="201" Y2="0" Stroke="Gray" 
                      StrokeThickness="1" VerticalAlignment="Center"/>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Label Content="幕墙图层配置"></Label>
            <Button Name="btnSelectLayer" Width="70" Margin="10,0" Content="增加图层" Template="{StaticResource ButtonTemplate}" Height="20" Click="btnSelectLayer_Click"></Button>
        </StackPanel>
        <StackPanel>        
            <ListBox x:Name="listBox" Height="220" 
                                         ScrollViewer.HorizontalScrollBarVisibility="Visible"
                                         ScrollViewer.VerticalScrollBarVisibility="Visible"
                             SelectionMode="Extended"
                                        ItemsSource="{Binding LayerInfos}" Margin="5">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}" >
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" x:Name="Bd" SnapsToDevicePixels="True">
                                        <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </CheckBox>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver">
                                                    <Condition.Value>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Panel.Background" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#1F26A0DA</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#A826A0DA</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive">
                                                    <Condition.Value>
                                                        <s:Boolean>False</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition Property="Selector.IsSelected">
                                                    <Condition.Value>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Panel.Background" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#3DDADADA</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FFDADADA</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive">
                                                    <Condition.Value>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition Property="Selector.IsSelected">
                                                    <Condition.Value>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Panel.Background" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#3D26A0DA</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FF26A0DA</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled">
                                            <Trigger.Value>
                                                <s:Boolean>False</s:Boolean>
                                            </Trigger.Value>
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Layer}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </StackPanel>
        <StackPanel Margin="0,5,0,10" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="确 定" Width="50" Name="btnOk" Template="{StaticResource ButtonTemplate}" Click="btnOk_Click"></Button>
            <Button Content="取 消" Width="50" Margin="5,0,0,0" Name="btnCancel" Template="{StaticResource ButtonTemplate}" Click="btnCancel_Click"></Button>
        </StackPanel>
    </StackPanel>
</cus:ThCustomWindow>
