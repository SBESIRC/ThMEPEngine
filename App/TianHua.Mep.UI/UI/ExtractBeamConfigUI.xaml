<cus:ThCustomWindow x:Class="TianHua.Mep.UI.UI.ExtractBeamConfigUI"
             xmlns:cus="clr-namespace:ThControlLibraryWPF.CustomControl;assembly=ThControlLibraryWPF"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:s="clr-namespace:System;assembly=mscorlib"             
             xmlns:converters="clr-namespace:TianHua.Mep.UI.Converter"
             xmlns:local="clr-namespace:TianHua.Mep.UI.UI"
                    Title="梁配置" SizeToContent="Manual" Height="370" 
                    Width="200" MaxWidth="200" MaxHeight="370"
             mc:Ignorable="d">
    <Window.Resources>        
        <ResourceDictionary>
            <converters:BeamEngineOpsBooleanConverter x:Key="beamEngineOpsConverter"/>
            <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
                <Border x:Name="Border" BorderBrush="Gray" BorderThickness="1.5" CornerRadius="5" Background="White" TextBlock.Foreground="Black">
                    <!--设置控件的边框，圆角，背景色，字体颜色-->
                    <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <!--显示控件的内容-->
                    </ContentPresenter>
                </Border>
            </ControlTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <StackPanel Orientation="Vertical">
        <Label Content="梁识别引擎："></Label>        
        <StackPanel Orientation="Horizontal" Margin="0,0,0,5" HorizontalAlignment="Center">
            <RadioButton Margin="0,6" x:Name="rbLayer" Content="图 层" GroupName="CheckObject" IsThreeState="False"
                                 IsChecked="{Binding BeamEngineOption,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,
                                 Converter={StaticResource beamEngineOpsConverter},ConverterParameter=0}" Checked="rbLayer_Checked">
            </RadioButton>
            <RadioButton Margin="10,6" x:Name="rbDB" Content="D B" GroupName="CheckObject" IsThreeState="False"
                                 IsChecked="{Binding BeamEngineOption,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,
                                 Converter={StaticResource beamEngineOpsConverter},ConverterParameter=1}" Checked="rbDB_Checked">
            </RadioButton>
            <RadioButton Margin="5,6" x:Name="rbBeamArea" Content="梁区域" GroupName="CheckObject" IsThreeState="False"
                                 IsChecked="{Binding BeamEngineOption,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,
                                 Converter={StaticResource beamEngineOpsConverter},ConverterParameter=2}" Checked="rbBeamArea_Checked">
            </RadioButton>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
            <Label Content="图层配置" Margin="8,0"></Label>
            <Button Content="增加图层" Name="btnAddLayer" Margin="15,0" Width="70" Template="{StaticResource ButtonTemplate}" Click="btnAddLayer_Click"></Button>
        </StackPanel>
        <ListBox x:Name="listBox" Height="220" 
                                         ScrollViewer.HorizontalScrollBarVisibility="Visible"
                                         ScrollViewer.VerticalScrollBarVisibility="Visible"
                             SelectionMode="Extended"
                                        ItemsSource="{Binding LayerInfos}" Margin="5">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}" >
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" x:Name="Bd" SnapsToDevicePixels="True">
                                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </CheckBox>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver">
                                                <Condition.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Condition.Value>
                                            </Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.Background" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush>#1F26A0DA</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="BorderBrush" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush>#A826A0DA</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive">
                                                <Condition.Value>
                                                    <s:Boolean>False</s:Boolean>
                                                </Condition.Value>
                                            </Condition>
                                            <Condition Property="Selector.IsSelected">
                                                <Condition.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Condition.Value>
                                            </Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.Background" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush>#3DDADADA</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="BorderBrush" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush>#FFDADADA</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive">
                                                <Condition.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Condition.Value>
                                            </Condition>
                                            <Condition Property="Selector.IsSelected">
                                                <Condition.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Condition.Value>
                                            </Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Panel.Background" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush>#3D26A0DA</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="BorderBrush" TargetName="Bd">
                                            <Setter.Value>
                                                <SolidColorBrush>#FF26A0DA</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled">
                                        <Trigger.Value>
                                            <s:Boolean>False</s:Boolean>
                                        </Trigger.Value>
                                        <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Layer}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <StackPanel Margin="0,5,0,10" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="确 定" Width="50" Name="btnOk" Template="{StaticResource ButtonTemplate}" Click="btnOk_Click"></Button>
            <Button Content="取 消" Width="50" Margin="5,0,0,0" Name="btnCancel" Template="{StaticResource ButtonTemplate}" Click="btnCancel_Click"></Button>
        </StackPanel>
    </StackPanel>
</cus:ThCustomWindow>
