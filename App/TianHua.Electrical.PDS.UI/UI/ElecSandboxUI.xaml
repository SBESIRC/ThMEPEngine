<cus:ThCustomWindow x:Class="TianHua.Electrical.PDS.UI.UI.ElecSandboxUI"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:local="clr-namespace:TianHua.Electrical.PDS.UI.UI"
                    xmlns:cus="clr-namespace:ThControlLibraryWPF.CustomControl;assembly=ThControlLibraryWPF"
                    mc:Ignorable="d"
                    ResizeMode="CanMinimize"
                    WindowState="Normal"
                    WindowStartupLocation="CenterScreen"
                    MinWidth="1000"
                    SizeToContent="Manual"
                    MinHeight="500"
                    Icon="{x:Null}"
                    FontFamily="Consolas"
                    Width="1000"
                    Height="800"
                    Background="White"
                    Title="THElec-Sandbox"
                    >
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="titleImageBtnTheme" TargetType="{x:Type cus:ImageButton}">
                <Setter Property="MouseOverBackground" Value="#7B7B7B"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Width" Value="25"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="ImageHeight" Value="16"/>
                <Setter Property="ImageWidth" Value="16"/>
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            </Style>

            <Style x:Key="titleTableItemTheme" TargetType="{x:Type TabItem}">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="tableItemBorder" Margin="3,0,0,0" BorderThickness="1" BorderBrush="Black" Background="Transparent" CornerRadius="3">
                                <Label x:Name="tableItemText" Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, Path=Header}"></Label>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="tableItemBorder" Value="#DCDCDC"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="tableItemBorder" Value="0.56"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="tableItemBorder" Value="0.56"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="tableItemBorder" Value="0.56"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="tableItemBorder" Value="0.56"/>
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Setter Property="Background" TargetName="tableItemBorder" Value="#DCDCDC"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Border x:Name="tableItemBorder" BorderThickness="1" BorderBrush="Black" Background="Transparent" CornerRadius="3">
                                <Label Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, Path=Header}"></Label>
                            </Border>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>-->
            </Style>
            
            <RoutedUICommand x:Key="NewProjectCommand" Text="NewProjectCtrl"/>
            <RoutedUICommand x:Key="OpenProjectCommand" Text="OpenProjectCtrl"/>
            <RoutedUICommand x:Key="SaveProjectCommand" Text="SaveProjectCtrl"/>
            <RoutedUICommand x:Key="SetCommand" Text="SetCtrl"/>

        </ResourceDictionary>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource NewProjectCommand}" Executed="btnNewProject_Click"></CommandBinding>
        <CommandBinding Command="{StaticResource OpenProjectCommand}" Executed="btnOpenProject_Click"></CommandBinding>
        <CommandBinding Command="{StaticResource SaveProjectCommand}" Executed="btnSaveProject_Click"></CommandBinding>
        <CommandBinding Command="{StaticResource SetCommand}" Executed="btnSetting_Click"></CommandBinding>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="F12" Modifiers="Ctrl" Command="{StaticResource NewProjectCommand}"></KeyBinding>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{StaticResource OpenProjectCommand}"></KeyBinding>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{StaticResource SaveProjectCommand}"></KeyBinding>
        <KeyBinding Key="T" Modifiers="Ctrl" Command="{StaticResource SetCommand}"></KeyBinding>
    </Window.InputBindings>
    <cus:ThCustomWindow.WindownTitleTemplate>
        <ControlTemplate>
            <Grid x:Name="gridTitleBtns">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Column="0">
                    <cus:ImageButton ImageTextLocation="ImageOnly" x:Name="btnNewProject"
                                     Style="{DynamicResource titleImageBtnTheme}"
                                     ToolTip="新建项目" 
                                     NormalImage="/ThControlLibraryWPF;component/Images/file_white.png"
                                     Click="btnNewProject_Click">
                    </cus:ImageButton>
                    <cus:ImageButton ImageTextLocation="ImageOnly" x:Name="btnOpenProject"
                                     Style="{DynamicResource titleImageBtnTheme}"
                                     ToolTip="打开项目"
                                     WindowChrome.IsHitTestVisibleInChrome="True"
                                     NormalImage="/ThControlLibraryWPF;component/Images/folderOpen_white.png"
                                     Click="btnOpenProject_Click">
                    </cus:ImageButton>
                    <cus:ImageButton ImageTextLocation="ImageOnly" x:Name="btnSaveProject"
                                     Style="{DynamicResource titleImageBtnTheme}"
                                     ToolTip="保存项目"
                                     NormalImage="/ThControlLibraryWPF;component/Images/save_white.png"
                                     Click="btnSaveProject_Click">
                    </cus:ImageButton>
                    <cus:ImageButton ImageTextLocation="ImageOnly" x:Name="btnSet"
                                     Style="{DynamicResource titleImageBtnTheme}"
                                     ToolTip="设置"
                                     NormalImage="/ThControlLibraryWPF;component/Images/SettingIcon.png"
                                     Click="btnSetting_Click">
                    </cus:ImageButton>
                    <cus:ImageButton ImageTextLocation="ImageOnly" x:Name="btnImportProject"
                                     Style="{DynamicResource titleImageBtnTheme}"
                                     ToolTip="导入项目"
                                     NormalImage="/ThControlLibraryWPF;component/Images/Import_white.png"
                                     Click="btnImportProject_Click">
                    </cus:ImageButton>
                    <cus:ImageButton ImageTextLocation="ImageOnly" x:Name="btnExportProject"
                                     Style="{DynamicResource titleImageBtnTheme}"
                                     ToolTip="导出项目"
                                     NormalImage="/ThControlLibraryWPF;component/Images/export_white.png"
                                     Click="btnExportProject_Click">
                    </cus:ImageButton>
                </StackPanel>
                <Label Grid.Column="1" Content="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type cus:ThCustomWindow}},Path=Title}" Margin="0" Padding="0" HorizontalAlignment="Center"
                       HorizontalContentAlignment="Center" Foreground="White" FontSize="14" FontWeight="Bold"
                       VerticalContentAlignment="Center"></Label>
                <StackPanel Orientation="Horizontal" Grid.Column="2">
                    <cus:ImageButton ImageTextLocation="ImageOnly"
                                     Style="{DynamicResource titleImageBtnTheme}"
                                     ToolTip="打开帮助"
                                     x:Name="btnOpenHelp"
                                     NormalImage="/ThControlLibraryWPF;component/Images/question_white.png"
                                     Click="btnOpenHelp_Click">
                    </cus:ImageButton>
                </StackPanel>
            </Grid>
        </ControlTemplate>
    </cus:ThCustomWindow.WindownTitleTemplate>
    <Grid x:Name="gridMain">
        <TabControl x:Name="tabTopFunction" ItemsSource="{Binding FunctionTableItems}" SelectedIndex="0">
            <TabControl.ItemContainerStyle>
                <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource titleTableItemTheme}">
                    <Setter Property="Header" Value="{Binding Title}" />
                    <Setter Property="Content" Value="{Binding ShowUserControl}"></Setter>
                </Style>
            </TabControl.ItemContainerStyle>
        </TabControl>
    </Grid>
</cus:ThCustomWindow>
