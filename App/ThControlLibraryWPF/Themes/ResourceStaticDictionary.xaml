<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ThControlLibraryWPF"
                    xmlns:localCus ="clr-namespace:ThControlLibraryWPF.CustomControl">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ThControlLibraryWPF;component/Themes/GenericBaseColors.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <!--输入框样式-->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderColor}" />
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundColor}"/>
        <Setter Property="AcceptsTab" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <AdornedElementPlaceholder Name="customAdorner"></AdornedElementPlaceholder>
                        <TextBox Text="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Margin="10,0,0,0" 
                                 BorderBrush="{StaticResource TextBoxBorderErrorColor}" Foreground="{StaticResource TextBoxBorderErrorColor}" VerticalContentAlignment="Center" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderErrorColor}"></Setter>
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type localCus:InputTextBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundColor}"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="HintText" Value=""/>
        <Setter Property="FocusBorderColor" Value="{StaticResource TextBoxFocusBorderColor}"/>
    </Style>
    
    <!--图片按钮样式-->
    <Style TargetType="{x:Type localCus:ImageButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColor}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgorudColor}"/>
        <Setter Property="DisabledBackground" Value="{StaticResource DisableBackgroundColor}"/>
        <Setter Property="MouseOverBackground" Value="{StaticResource ButtonMouseOverBackgroundColor}" />
        <Setter Property="MouseOverForeground" Value="{StaticResource ButtonMouseOverForegroundColor}"/>
        <Setter Property="DisabledBackground" Value="{StaticResource DisableBackgroundColor}"/>
        <Setter Property="DisabledForeground" Value="{StaticResource DisableForegroundColor}"/>
    </Style>

    <!--按钮默认样式-->
    <Style  TargetType="{x:Type Button}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColor}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgorudColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundColor}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonMouseOverBackgroundColor}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonMouseOverForegroundColor}"/>
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonMouseOverBackgroundColor}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonMouseOverForegroundColor}"/>
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--RadioButton默认样式-->
    <Style TargetType="RadioButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource RadioButtonFocusBorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource RadioButtonFocusBorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--下拉选择的默认样式-->
    <Style TargetType="ComboBox">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource CommonBorderColor}"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource CommonBorderColor}"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>

    <!--Start DataGrid相关样式-->
    <Style TargetType="DataGrid">
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DataGridHorizontalGridLinesBrushColor}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DataGridVerticalGridLinesBrushColor}"/>
    </Style>
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Background" Value="{StaticResource DataGridHeadBackgroundColor}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource DataGridHeadForegroundColor}"></Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource DataGridHeadBorderColor}" />
        <Setter Property="FontWeight" Value="Black"></Setter>
        <Setter Property="Height" Value="30"></Setter>
    </Style>
    <Style TargetType="DataGridRow">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource DataGridRowSelectBackgroundColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DataGridCell">
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Grid Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End DataGrid样式-->
</ResourceDictionary>