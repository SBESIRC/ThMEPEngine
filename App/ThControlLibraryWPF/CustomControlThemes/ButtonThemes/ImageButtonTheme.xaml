<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ThControlLibraryWPF.CustomControl"
                    xmlns:localBase ="clr-namespace:ThControlLibraryWPF">
    <local:ImageTextLocationConverter x:Key="locationConverter"/>
    <local:ImageTextVisibilityConverter x:Key="textImageConverter"/>
    <local:TextShowMultiConverter x:Key="textShowConverter"/>

    <localBase:BackgroundMultiConverter x:Key="backgroundConverter"/>
    <localBase:BackgrougImageMultiConverter x:Key="backImageConverter" />
    <localBase:ForegroundMultiConverter  x:Key="foregroundConverter"/>
    <Style TargetType="{x:Type local:ImageButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="MouseOverBackground" Value="#176BD1"/>
        <Setter Property="MouseOverForeground" Value="White"/>
        <!--控件不设置背景色时 Background="{x:Null}" 这会影响一些事件的触发，没有颜射时可以设置Background="Transparent"-->
        <Setter Property="Background" Value="#F8F8F8"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{Binding Foreground}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}" >
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="True" Focusable="False"
                            CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CornerRadius}" >
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Background="Transparent"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Image x:Name="showImage" RenderTransformOrigin="0.5,0.5"
                                   Source="{TemplateBinding NormalImage}"
                                   Margin="{Binding ImageMargin,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay,NotifyOnSourceUpdated=True}"
                                   Grid.Row="{Binding ImageTextLocation,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay,NotifyOnSourceUpdated=True, ConverterParameter=ImageRow, Converter={StaticResource locationConverter}}" 
                                   Grid.Column="{Binding ImageTextLocation,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay,NotifyOnSourceUpdated=True, ConverterParameter=ImageColumn, Converter={StaticResource locationConverter}}"
                                   Stretch="{TemplateBinding ImageStretch}"
                                   StretchDirection="{TemplateBinding ImageStretchDirection}"
                                   Width="{TemplateBinding ImageWidth}"
                                   Height="{TemplateBinding ImageHeight}"
                                   Visibility="{Binding ImageTextLocation,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay,NotifyOnSourceUpdated=True,ConverterParameter=ImageVisibility, Converter={StaticResource textImageConverter}}">
                                <Image.RenderTransform>
                                    <RotateTransform x:Name="transIcon" Angle="0"/>
                                </Image.RenderTransform>
                            </Image>
                            <TextBlock TextWrapping="Wrap"  Name="text" LineHeight="0.1" Background="Transparent" IsHitTestVisible="False"
                                       Margin="{Binding TextMargin,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay,NotifyOnSourceUpdated=True}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Grid.Row="{Binding ImageTextLocation,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay,NotifyOnSourceUpdated=True, ConverterParameter=TextRow, Converter={StaticResource locationConverter}}"
                                       Visibility="{Binding ImageTextLocation,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay,NotifyOnSourceUpdated=True,ConverterParameter=TextVisibility, Converter={StaticResource textImageConverter}}"
                                       Grid.Column="{Binding ImageTextLocation,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay,NotifyOnSourceUpdated=True, ConverterParameter=TextColumn, Converter={StaticResource locationConverter}}">
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource textShowConverter}">
                                        <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="TextOrientation" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--鼠标移入事件-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--鼠标移入背景图片-->
                            <Setter TargetName="showImage" Property="Source">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource backImageConverter}" ConverterParameter="showImageOverSource">
                                        <Binding Path="HoverImage" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="NormalImage" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <!--End 鼠标移入背景图片-->

                            <!--鼠标移入背景颜色-->
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource backgroundConverter}" NotifyOnSourceUpdated="True" ConverterParameter="borderOverBackground">
                                        <Binding Path="MouseOverBackground" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <!--End 鼠标移入背景颜色-->
                            <!--鼠标移入前景色-->
                            <Setter Property="Foreground" TargetName="text">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource foregroundConverter}" NotifyOnSourceUpdated="True" ConverterParameter="Foreground">
                                        <Binding Path="MouseOverForeground" RelativeSource="{RelativeSource TemplatedParent}" NotifyOnSourceUpdated="True"/>
                                        <Binding Path="Foreground" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <!--End 鼠标移入前景色-->

                        </Trigger>
                        <!--End 鼠标移入事件-->

                        <!--Ficon的动画触发器-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"></Condition>
                                <Condition Property="AllowsAnimation" Value="true"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="90" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="60" Duration="0:0:0.4" />
                                        <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="30" Duration="0:0:0.6" />
                                        <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                        </MultiTrigger>

                        <Trigger Property="IsFocused" Value="True">
                            <!--鼠标移入背景图片-->
                            <Setter TargetName="showImage" Property="Source">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource backImageConverter}" ConverterParameter="showImageOverSource">
                                        <Binding Path="HoverImage" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="NormalImage" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <!--End 鼠标移入背景图片-->

                            <!--鼠标移入背景颜色-->
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource backgroundConverter}" NotifyOnSourceUpdated="True" ConverterParameter="borderOverBackground">
                                        <Binding Path="MouseOverBackground" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <!--End 鼠标移入背景颜色-->
                            <!--鼠标移入前景色-->
                            <Setter Property="Foreground" TargetName="text">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource foregroundConverter}" NotifyOnSourceUpdated="True" ConverterParameter="Foreground">
                                        <Binding Path="MouseOverForeground" RelativeSource="{RelativeSource TemplatedParent}" NotifyOnSourceUpdated="True"/>
                                        <Binding Path="Foreground" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <!--End 鼠标移入前景色-->

                        </Trigger>

                        <!--鼠标按下事件-->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="showImage" Property="Source">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource backImageConverter}" NotifyOnSourceUpdated="True">
                                        <Binding Path="PressedImage" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="NormalImage" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource backgroundConverter}" NotifyOnSourceUpdated="True">
                                        <Binding Path="MousedownBackground" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="MouseOverBackground" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--End 鼠标按下事件-->



                        <!--按钮不可用事件-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="showImage" Property="Source">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource backImageConverter}">
                                        <Binding Path="DisabledImage" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="NormalImage" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource backgroundConverter}" NotifyOnSourceUpdated="True">
                                        <Binding Path="DisabledBackground" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" TargetName="text">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource foregroundConverter}" NotifyOnSourceUpdated="True" ConverterParameter="Foreground">
                                        <Binding Path="DisabledForeground" RelativeSource="{RelativeSource TemplatedParent}" NotifyOnSourceUpdated="True"/>
                                        <Binding Path="Foreground" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--End 按钮不可用事件-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>