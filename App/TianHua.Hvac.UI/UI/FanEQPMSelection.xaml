<cus:ThCustomWindow x:Class="TianHua.Hvac.UI.UI.FanEQPMSelection"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:local="clr-namespace:TianHua.Hvac.UI.UI"
                    mc:Ignorable="d" 
                    BorderThickness="1"
                    BorderBrush="#787878"
                    FontSize="12"
                    xmlns:cus="clr-namespace:ThControlLibraryWPF.CustomControl;assembly=ThControlLibraryWPF"
                    xmlns:cusLocal="clr-namespace:ThControlLibraryWPF;assembly=ThControlLibraryWPF"
                    ResizeMode="NoResize"
                    WindowState="Normal"
                    WindowStartupLocation="CenterScreen"
                    MinWidth="800"
                    SizeToContent="Manual"
                    MinHeight="400"
                    Width="1100"
                    Foreground="#787878"
                    Height="500"
                    Background="White"
                    Name="window"
                    Title="风机选型"
                    Closing="window_Closing">
    <Window.Resources>
        <ResourceDictionary>
            <cusLocal:EnumToVisibilty x:Key="enumToVisibility"/>
            <cusLocal:BoolToVisibilty x:Key="boolToVisibility"/>
            <cusLocal:EnumIntToBoolConverter x:Key="enumRadioBtnChecked"/>
            <SolidColorBrush x:Key="TextColor" Color="#555555"/>
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="1,0,0,1" />
                <Setter Property="Margin" Value="-1,0,0,0"/>
                <Setter Property="BorderBrush" Value="{DynamicResource TextColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Block.TextAlignment" Value="Center"/>
            </Style>
            
            <!--<Style TargetType="DataGridCell">
                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridCell">
                            <Grid Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                </ContentPresenter>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->
            <Style TargetType="{x:Type ComboBox}" x:Key="DataGridComboxTheme">
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="2,5,0,5"/>
            </Style>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type cus:ImageButton}">
                <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource TextColor}"/>
            </Style>
            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <cus:ImageButton ImageTextLocation="ImageInTextLeft" Content="导出风机参数表" Height="25"
                             Foreground="{DynamicResource TextColor}"
                             BorderBrush="{DynamicResource TextColor}"
                             TextMargin="0,0,5,0" NormalImage="../Images/导出风机材料表.png" ImageStretch="Fill" ImageMargin="5,0,3,0"
                             ImageHeight="16" ImageWidth="16" Name="btnExportExcel" Click="btnExportExcel_Click">

            </cus:ImageButton>
            <cus:ImageButton ImageTextLocation="ImageInTextLeft" Content="导出风机计算书" Height="25" Margin="5,0,0,0"
                             Foreground="{DynamicResource TextColor}"
                             BorderBrush="{DynamicResource TextColor}"
                             TextMargin="0,0,5,0" NormalImage="../Images/导出风机计算表.png" ImageStretch="Fill" ImageMargin="5,0,3,0"
                             ImageHeight="16" ImageWidth="16" Name="btnExportFile"
                             Click="btnExportFile_Click">

            </cus:ImageButton>
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" 
                            Visibility="{Binding ShowType,Mode=OneWay,Converter={StaticResource enumToVisibility},ConverterParameter=10}">
                    <Label Content="应用场景:" VerticalContentAlignment="Center" Padding="0,0,5,0"></Label>
                    <ComboBox Width="200" Height="22" ItemsSource="{Binding ScenarioItems}" 
                          Foreground="{DynamicResource TextColor}"
                          SelectedItem="{Binding ScenarioSelectItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" 
                            Visibility="{Binding ShowType,Mode=OneWay,Converter={StaticResource enumToVisibility},ConverterParameter=20}">
                    <Label Content="风机代号:" VerticalContentAlignment="Center" Padding="0,0,5,0"></Label>
                    <ComboBox Width="200" Height="22" ItemsSource="{Binding FanCodeItems}" 
                          Foreground="{DynamicResource TextColor}"
                          SelectedItem="{Binding FanCodeItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                </StackPanel>
                <cus:ImageButton ImageTextLocation="TextOnly" Content="复制新增" Margin="5,0,5,0" TextMargin="5,0,5,0" Height="22"
                                 x:Name="btnAddRowCopy"
                                 Click="btnAddRowCopy_Click" />
                <cus:ImageButton ImageTextLocation="TextOnly" Content="删除" Margin="5,0,5,0" TextMargin="5,0,5,0" Height="22"
                                 IsEnabled="{Binding HaveSelectItem,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                 x:Name="btnDelRow" Click="btnDelRow_Click"/>
                <cus:ImageButton ImageTextLocation="TextOnly" Content="上移" Margin="5,0,5,0" TextMargin="5,0,5,0" Height="22"
                                 IsEnabled="{Binding HaveSelectItem,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                 x:Name="btnMoveUpRow" Click="btnMoveUpRow_Click"></cus:ImageButton>
                <cus:ImageButton ImageTextLocation="TextOnly" Content="下移" Margin="5,0,5,0" TextMargin="5,0,5,0" Height="22"
                                 IsEnabled="{Binding HaveSelectItem,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                 x:Name="btnMoveDownRow" Click="btnMoveDownRow_Click"/>
            </StackPanel>
            <WrapPanel Orientation="Horizontal" Grid.Column="1" Margin="0,0,10,0" VerticalAlignment="Center">
                <cus:ImageButton ImageTextLocation="ImageInTextLeft" Content="刷新" Height="22" 
                             TextMargin="0,0,5,0" NormalImage="../Images/刷新.png" ImageStretch="Uniform" ImageMargin="5,0,3,0"
                             ImageHeight="16" ImageWidth="16"
                                 x:Name="btnRefresh" Click="btnRefresh_Click"></cus:ImageButton>
                <Label Content="视图：按"></Label>
                <RadioButton Content="应用场景" VerticalContentAlignment="Center" GroupName="radioShowType"  Padding="0"
                             IsChecked="{Binding ShowType,Converter={StaticResource enumRadioBtnChecked},ConverterParameter=10}"></RadioButton>
                <RadioButton Content="风机代号" VerticalContentAlignment="Center" GroupName="radioShowType" Margin="5,0,0,0" Padding="0"
                             IsChecked="{Binding ShowType,Converter={StaticResource enumRadioBtnChecked},ConverterParameter=20}"></RadioButton>
                <Label Content="展示"></Label>
            </WrapPanel>
        </Grid>
        <DataGrid Grid.Row="2" RowHeaderWidth="0"
                  BorderThickness="1"
                  Foreground="{DynamicResource TextColor}"
                  CanUserAddRows="False" AutoGenerateColumns="False"
                  ItemsSource="{Binding FanInfos}" RowHeight="25"
                  SelectedItem="{Binding SelectFanData,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  ColumnHeaderHeight="50" SelectionMode="Single"
                  CellEditEnding="DataGrid_CellEditEnding"
                  FrozenColumnCount="2" AreRowDetailsFrozen="False">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="应用场景" Width="96" CanUserResize="False" IsReadOnly="True" CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="-" HorizontalAlignment="Center" 
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"/>
                                <Label Content="{Binding ScenarioString,Mode=OneWay,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}" 
                                       HorizontalAlignment="Center" 
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility},ConverterParameter=1}"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"/>
                                
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="130" CanUserResize="False" Header="风机编号" CanUserSort="True">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                                <Label Content="风机编号" VerticalContentAlignment="Center"/>
                                <WrapPanel Orientation="Vertical" Margin="5,0,0,0" VerticalAlignment="Center">
                                    <Button x:Name="orderUp" Click="orderUp_Click">
                                        <Button.Template>
                                            <ControlTemplate >
                                                <Border x:Name="border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" IsHitTestVisible="True"  Focusable="False">
                                                    <Path x:Name="pathIcon" Stretch="Uniform" Height="8" Width="8" Focusable="False"
                                                      Data="M758.4 385.92 539.52 140.16c-14.72-16.64-40.32-16.64-54.4 0L266.24 385.92C244.48 409.6 261.76 448 293.12 448l437.76 0C762.88 448 779.52 409.6 758.4 385.92z"
                                                      Fill="#555555" />

                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <!--鼠标移入事件-->
                                                    <Trigger  Property="IsMouseOver" Value="true">
                                                        <!--鼠标移入前景色-->
                                                        <Setter Property="Fill" TargetName="pathIcon" Value="#176BD1"/>
                                                        <!--End 鼠标移入前景色-->
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding ElementName=window, Path=DataContext.IsOrderUp}" Value="True">
                                                        <Setter Property="Fill" TargetName="pathIcon" Value="#176BD1"/>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                    <Button x:Name="orderDown" Click="orderDown_Click">
                                        <Button.Template>
                                            <ControlTemplate >
                                                <Border x:Name="border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" IsHitTestVisible="True"  Focusable="False">
                                                    <Path x:Name="pathIcon" Stretch="Uniform" Height="8" Width="8" Focusable="False"
                                                      Data="M757.76 637.44l-218.88 245.76c-14.72 16.64-40.32 16.64-54.4 0L265.6 637.44C244.48 613.76 261.12 576 293.12 576l437.76 0C762.24 576 779.52 613.76 757.76 637.44z"
                                                      Fill="#555555"  />

                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <!--鼠标移入事件-->
                                                    <Trigger  Property="IsMouseOver" Value="true">
                                                        <!--鼠标移入前景色-->
                                                        <Setter Property="Fill" TargetName="pathIcon" Value="#176BD1"/>
                                                        <!--End 鼠标移入前景色-->
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding ElementName=window, Path=DataContext.IsOrderUp}" Value="False">
                                                        <Setter Property="Fill" TargetName="pathIcon" Value="#176BD1"/>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </WrapPanel>

                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid x:Name="gridNum" Background="Transparent">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center"
                                            Visibility="{Binding IsChildFan,Mode=OneWay,Converter={StaticResource boolToVisibility},ConverterParameter=1}">
                                    <Label Padding="0" VerticalContentAlignment="Center" Content="{Binding Name,Mode=TwoWay}"
                                           Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></Label>
                                    <Label Padding="0" VerticalContentAlignment="Center"  Content="-"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></Label>
                                    <Label Padding="0" VerticalContentAlignment="Center"  
                                           Content="{Binding InstallSpace,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                           BorderThickness="0,0,0,1"
                                           BorderBrush="Black"
                                           ToolTip="子项"
                                           HorizontalContentAlignment="Center"
                                           Width="20" 
                                           
                                           Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></Label>
                                    
                                    <Label Padding="0" VerticalContentAlignment="Center"   Content="-"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></Label>

                                    <Label Padding="0" VerticalContentAlignment="Center"  
                                           Content="{Binding InstallFloor,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                           BorderThickness="0,0,0,1"
                                           Height="22"
                                           BorderBrush="Black"
                                           ToolTip="楼层"
                                           HorizontalContentAlignment="Center"
                                           Width="20" 
                                           Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></Label>
                                    <Label Padding="0" VerticalContentAlignment="Center"  Content="-"
                                           Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></Label>
                                    <Label Padding="0" VerticalContentAlignment="Center"  
                                           Content="{Binding VentNum,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                           BorderThickness="0,0,0,1"
                                           BorderBrush="Black"
                                           ToolTip="楼层"
                                           HorizontalContentAlignment="Center"
                                           Width="40"
                                           Height="22"
                                           Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></Label>
                                </StackPanel>
                                <Label Content="-" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"></Label>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsRepetitions,Mode=OneWay,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter TargetName="gridNum" Property="Background" Value="#FFAFAF"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                        
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <Grid x:Name="gridNum" Background="Transparent">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center"
                                            Visibility="{Binding IsChildFan,Mode=OneWay,Converter={StaticResource boolToVisibility},ConverterParameter=1}">
                                    <Label Padding="0" VerticalContentAlignment="Center" Content="{Binding Name,Mode=TwoWay}"
                                           Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></Label>
                                    <Label Padding="0" VerticalContentAlignment="Center"  Content="-"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></Label>
                                    <TextBox Width="20" Height="22" Text="{Binding InstallSpace,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}" ToolTip="子项"
                                             BorderBrush="Black" BorderThickness="0,0,0,1" HorizontalContentAlignment="Center"
                                             AcceptsTab="False" TabIndex="0"
                                             Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></TextBox>
                                    <Label Padding="0" VerticalContentAlignment="Center"   Content="-"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></Label>
                                    <TextBox Width="20" Height="22" Text="{Binding InstallFloor,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}" ToolTip="楼层"
                                             BorderBrush="Black" BorderThickness="0,0,0,1" AcceptsTab="False" HorizontalContentAlignment="Center"
                                             TabIndex="1"
                                         Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></TextBox>
                                    <Label Padding="0" VerticalContentAlignment="Center"  Content="-"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></Label>
                                    <TextBox Width="40" Height="22" Text="{Binding VentNum,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                             ToolTip="序号" BorderBrush="Black" BorderThickness="0,0,0,1" AcceptsTab="False"
                                             TabIndex="2"
                                             HorizontalContentAlignment="Center"
                                             Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></TextBox>
                                </StackPanel>
                                <Label Content="-" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"></Label>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsRepetitions,Mode=OneWay,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter TargetName="gridNum" Property="Background" Value="#FFAFAF"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="服务区域" Width="110" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Center">
                                <Label Content="-" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"></Label>
                                
                                <TextBox MinWidth="40" Height="22" 
                                         HorizontalAlignment="Center"
                                         Text="{Binding ServiceArea,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                         Visibility="{Binding IsChildFan,Mode=OneWay,Converter={StaticResource boolToVisibility},ConverterParameter=1}"
                                         ToolTip="服务区域" BorderBrush="Black" BorderThickness="0,0,0,1" AcceptsTab="False"
                                         HorizontalContentAlignment="Center"
                                         Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"></TextBox>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="风机&#13;频率" Width="46" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="低速" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"></Label>
                                <ComboBox ItemsSource="{Binding ElementName=window, Path=DataContext.FanControlItems,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                          Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility},ConverterParameter=1}"
                                          Foreground="{DynamicResource TextColor}"
                                          SelectedItem="{Binding FanControlItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                          Style="{DynamicResource DataGridComboxTheme}"
                                          SelectionChanged="ComboBox_SelectionChanged"/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="风机风量&#13;(m³/h)" Width="65" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="{Binding AirVolume,Mode=OneWay,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}" 
                                       HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
                                       Padding="0" VerticalContentAlignment="Center" VerticalAlignment="Center"
                                       Margin="0,0,15,0"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"/>
                                <cus:ImageButton ImageHeight="16" ImageWidth="16" Height="20" ImageTextLocation="ImageOnly"
                                                 BorderThickness="0" Background="Transparent"
                                                 HorizontalContentAlignment="Right"
                                                 NormalImage="../Images/计算输入.png"
                                                 MouseOverBackground="Transparent"
                                                 ToolTip="计算输入风量"
                                                 x:Name="btnCalcAirVolume"
                                                 Click="btnCalcAirVolume_Click"></cus:ImageButton>
                            </Grid>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="总阻力&#13;(Pa)" Width="50" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="{Binding WindResis,Mode=OneWay,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}" 
                                       HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
                                       Padding="0" VerticalContentAlignment="Center" VerticalAlignment="Center"
                                       Margin="0,0,15,0"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"/>
                                <cus:ImageButton ImageHeight="16" ImageWidth="16" Height="20" ImageTextLocation="ImageOnly"
                                                 BorderThickness="0" Background="Transparent"
                                                 MouseOverBackground="Transparent"
                                                 HorizontalContentAlignment="Right"
                                                 NormalImage="../Images/计算输入.png"
                                                 ToolTip="计算输入的阻力"
                                                 x:Name="btnCalcTotalResistance"
                                                 Click="btnCalcTotalResistance_Click"></cus:ImageButton>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="风机形式" Width="123" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="-" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"></Label>
                                
                                <ComboBox ItemsSource="{Binding FanTypeItems,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                          Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility},ConverterParameter=1}"
                                          SelectedItem="{Binding FanTypeItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                          Style="{DynamicResource DataGridComboxTheme}"
                                          Foreground="{DynamicResource TextColor}"></ComboBox>
                            </Grid>
                            
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="气流方向" Width="71" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="-" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"></Label>
                                <ComboBox ItemsSource="{Binding AirflowDirectionItems,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                          SelectedItem="{Binding AirflowDirectionItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                          Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility},ConverterParameter=1}"
                                          Style="{DynamicResource DataGridComboxTheme}"
                                          Foreground="{DynamicResource TextColor}"></ComboBox>
                            </Grid>
                        </DataTemplate>
                        
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="风机&#13;能效" Width="46" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="-" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"></Label>
                                <ComboBox ItemsSource="{Binding ElementName=window, Path=DataContext.EnergyItems,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                          Foreground="{DynamicResource TextColor}"
                                          Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility},ConverterParameter=1}"
                                          Style="{DynamicResource DataGridComboxTheme}"
                                          SelectedItem="{Binding FanEnergyItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"></ComboBox>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="电机&#13;能效" Width="46" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="-" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"></Label>
                                <ComboBox ItemsSource="{Binding ElementName=window, Path=DataContext.EnergyItems,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}" 
                                          Foreground="{DynamicResource TextColor}"
                                          Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility},ConverterParameter=1}"
                                          Style="{DynamicResource DataGridComboxTheme}"
                                          SelectedValue="{Binding MotorEnergyItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"></ComboBox>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="风机型号" Width="140" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="-" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"></Label>
                                <Grid Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility},ConverterParameter=1}">
                                    <Label x:Name="labFanCCCF" Content="{Binding FanModelCCCF,Mode=OneWay,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}" 
                                           HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
                                           Padding="0" VerticalContentAlignment="Center" VerticalAlignment="Center"
                                           Margin="15,0,0,0"
                                           Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"/>
                                    <cus:ImageButton ImageHeight="16" ImageWidth="16" Height="20" ImageTextLocation="ImageOnly"
                                                 BorderThickness="0" 
                                                 Background="Transparent"
                                                 MouseOverBackground="Transparent"
                                                 HorizontalContentAlignment="Left" ImageMargin="2,0,0,0"
                                                 NormalImage="../Images/风机型号.png"
                                                 x:Name="btnCalcFanModel"
                                                 Click="btnCalcFanModel_Click"></cus:ImageButton>
                                </Grid>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelectFanError,Mode=OneWay,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter TargetName="labFanCCCF" Property="Foreground" Value="#FF8066"/>
                                    <Setter TargetName="labFanCCCF" Property="FontStyle" Value="Italic"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="安装方式" Width="60" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="-" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"></Label>
                                <ComboBox ItemsSource="{Binding ElementName=window, Path=DataContext.FanMountTypeItems,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                          Foreground="{DynamicResource TextColor}"
                                          Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility},ConverterParameter=1}"
                                          Style="{DynamicResource DataGridComboxTheme}"
                                          SelectedItem="{Binding FanMountTypeItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"></ComboBox>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="减震&#13;方式" Width="35" CanUserResize="False" CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="-" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"></Label>
                                <ComboBox ItemsSource="{Binding ElementName=window, Path=DataContext.VibrationModeItems,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"
                                          Foreground="{DynamicResource TextColor}"
                                          Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility},ConverterParameter=1}"
                                          Style="{DynamicResource DataGridComboxTheme}"
                                          SelectedItem="{Binding VibrationModeItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}"></ComboBox>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="备&#13;注" Width="25" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="-" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"></Label>
                                <cus:ImageButton ImageHeight="16" ImageWidth="16" Height="20" ImageTextLocation="ImageOnly"
                                                 Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility},ConverterParameter=1}"
                                                 BorderThickness="0" Background="Transparent"
                                                 MouseOverBackground="Transparent"
                                                 NormalImage="../Images/备注.png"
                                                 x:Name="btnRemark"
                                                 ToolTip="修改备注信息"
                                                 Click="btnRemark_Click"/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="插入&#13;图块" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="-" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridCell}}, Path=Foreground}"
                                       Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility}}"></Label>

                                <cus:ImageButton ImageHeight="16" ImageWidth="16" Height="20" ImageTextLocation="ImageOnly"
                                                 BorderThickness="0" Background="Transparent"
                                                 MouseOverBackground="Transparent"
                                                 ToolTip="插入风机到图纸或更新图纸中的风机信息"
                                                 Visibility="{Binding IsChildFan,Mode=OneWay,NotifyOnSourceUpdated=True,Converter={StaticResource boolToVisibility},ConverterParameter=1}"
                                                 MousedownBackground="Transparent" NormalImage="../Images/插入.png" x:Name="btnInsertBlock"
                                                 Click="btnInsertBlock_Click"></cus:ImageButton>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</cus:ThCustomWindow>
